name: Publish artifact

on:
  workflow_dispatch:
  release:
    types:
      - published

jobs:
  publish-artifact:
    permissions:
      packages: write
      contents: read
    name: Build and test artifact
    runs-on: ubuntu-latest
    outputs:
      build-tag: ${{ steps.generate-build-tag.outputs.build-tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # checkout gir shallow copy - fetch-depth: 0 vil tilgjengeliggjÃ¸re tags
        with:
          fetch-depth: 0
      - name: Create m2-settings
        uses: whelk-io/maven-settings-xml-action@9dc09b23833fa9aa7f27b63db287951856f3433d # v22
        with:
          repositories: '[
            { "id": "github", "url": "https://maven.pkg.github.com/navikt/maven-release", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }
          ]'
          servers: '[
            { "id": "github", "username": "x-access-token", "password": "${{ secrets.READER_TOKEN }}" }
          ]'
          output_file: settings.xml
      - name: Set up JDK21 and cache dependencies
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'
      - name: Build with Maven
        run: mvn --settings settings.xml package
      - name: Generate build tag
        id: generate-build-tag
        run: echo "build-tag=$(ver=$(git describe --abbrev=0 --tags | awk -F \. {'$1++;print $1'}); if ! [[ $ver =~ ^[0-9]+$ ]]; then (echo "1" && git rev-parse --short HEAD) | paste -s -d'-'; else (echo $ver && git rev-parse --short HEAD) | paste -s -d'-' ; fi)" >> $GITHUB_OUTPUT
      - name: Print build tag/artifact version
        id: print-build-tag
        run: echo "Generated build tag is ${{ steps.generate-build-tag.outputs.build-tag }}"
